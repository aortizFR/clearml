id: "gromacs"
version: "1.0.0"
name: "Gromacs"
provider: "ClearML"
description: "Launch Gromacs on the HPC Cluster"
icon: "${ASSET:gromacs-logo.png}"
badges: []
details_page: "task"
no_info_html: "${ASSET:index.html}"
#default_queue: "hpc-compute"

task {
    # task fields to use when creating the application task
    # will probably be a dump from an existing task by the creator of the app
    script {
        repository: "https://github.com/aortizFR/clearml.git"
        entry_point: "main.py"
        working_dir: "gromacs"
        branch: "master"
    }
    hyperparams {
        General {
             a_number: 30.0
             a_string: "testing 1, 2, 3"
             a_boolean: False
             a_project_id: ""
        }
    }
}

wizard {
    entries: [
        {
            name: target_project
            title: "Choose a Project"
            info: "New task will be created in this project"
            type: dropdown
            required: true
            autocomplete: true
            choices {
                source: project
                value_field: name
                display_field: name
                # filter {
                #     fields {
                #        name: "^Ex.*"
                #     }
                # }
            }
            target {
                field: hyperparams
                section: General
                name: target_project
            }
        }
        {
            name: new_task_name
            title: "New task name"
            type: string
            placeholder: "Bash task"
            required: true
            target {
                field: hyperparams
                section: General
                name: new_task_name
            }
        }
        {
            name: queue_name
            title: "Target Queue"
            info: "The queue serviced by the ClearML Agent which will execute the Bash Script."
            type: dropdown
            autocomplete: true
            choices {
                source: queue
                value_field: name
                display_field: [display_name, name]
            }
            target {
                field: hyperparams
                section: General
                name: queue_name
            }
        }

        # Number of nodes: right now lets focus on single node runs
        # {
        #     name: num_nodes
        #     title: Number of nodes
        #     info: "Number of nodes to request"
        #     type: integer
        #     default: 1
        #     min: 1
        #     max: 2
        #     required: true
        #     target {
        #         field: hyperparams
        #         section: General
        #         name: num_nodes
        #     }
        # }

        # Number of thread-MPI ranks
        # Bash script: -ntmpi 8 (should reflect this parameter)
        {
            name: num_mpi_threads
            title: "Number of thread-MPI ranks"
            info: "Number of thread-MPI ranks to request (i.e. Gromacs -ntmpi option)"
            type: integer
            default: 8
            min: 1
            max: 128
            required: true
            target {
                field: hyperparams
                section: General
                name: num_mpi_threads
            }
        }

        # Number of OpenMP threads per MPI rank
        # Bash script: -ntomp 5 (should reflect this parameter)
        {
            name: num_openmp_threads
            title: "Number of OpenMP threads per MPI rank"
            info: "Number of OpenMP threads per MPI rank to request (i.e. Gromacs -ntomp option)"
            type: integer
            default: 5
            min: 1
            max: 128
            required: true
            target {
                field: hyperparams
                section: General
                name: num_openmp_threads
            }
        }

        # Hidden parameter: number of tasks
        # Requirement: num_mpi_threads x num_openmp_threads = total number of CPU cores requested
        # This value should not be more than 128 cores for the purpose of this demo
        # Ideally, when user selects num_mpi_threads and num_openmp_threads, this value is auto-calculated
        # It should somehow display an error if the multiplication exceeds the max allowed cores
        # Slurm template: --cpus-per-task=${CLEARML_TASK.hyperparams.properties.num_tasks.value:1}
        {
            name: num_tasks
            title: "Number of CPU cores"
            info: "Total number of CPU cores to request (num_mpi_threads x num_openmp_threads)"
            type: integer
            default: 40
            min: 1
            max: 128
            required: true
            hidden: true
            target {
                field: hyperparams
                section: General
                name: num_tasks
            }
        }

        # Number of GPUs per node
        # Bash script: -gpu_id 0 (should reflect this parameter)
        # Example:
        #   1x GPU  => -gpu_id 0
        #   2x GPUs => -gpu_id 01
        #   3x GPUs => -gpu_id 012
        #   4x GPUs => -gpu_id 0123
        # Slurm template: --gres=gpu:${CLEARML_TASK.hyperparams.properties.num_gpus.value:1}
        # Bash script: -gpu_id 0123
        {
            name: num_gpus
            title: "Number of GPUs per node"
            info: "Number of GPU per node to request"
            type: integer
            default: 1
            min: 1
            max: 4
            required: true
            target {
                field: hyperparams
                section: General
                name: num_gpus
            }
        }

        # Memory per node
        # Slurm template: --mem=${CLEARML_TASK.hyperparams.properties.memory_gb.value:256G}
        # Slurm expects the value in MB by default, but we can use 'G' to specify it in GB
        {
            name: memory_gb
            title: "Memory (GB)"
            info: "Memory per node to request (in GB)"
            type: integer
            default: 8
            min: 1
            max: 256
            required: true
            target {
                field: hyperparams
                section: General
                name: memory_gb
            }
        }

        # Working directory
        # Bash script: WORKDIR variable (should reflect this parameter)
        {
            name: workdir
            title: "Working directory (remote use case)"
            info: "Working directory path on the remote cluster (e.g. /home/user/simulations/run1)"
            type: string
            placeholder: "/path/to/input"
            required: true
            target {
                field: hyperparams
                section: General
                name: workdir
            }
        }
    ]
}

dashboard {
    lines: [
        {
            style {
                height: "initial"
            }
            contents: [
                {
                    title: "HTML box with the string selected by the user"
                    type: html
                    text: "<h2>The string is ${hyperparams.General.a_string.value}</h2>"
                },
                {
                    title: "HTML box with the count of tasks"
                    type: html
                    text: "<h2>Project ${hyperparams.General.project_name.value} contains ${hyperparams.General.tasks_count.value} tasks</h2>"
                }
            ]
        }
        {
            contents: [
                {
                    title: "A random plot"
                    type: plot
                    metric: "Plots"
                    variant: "plot"
                }
            ]
        }
        {
            contents: [
                {
                    title: "Logs"
                    type: log
                }
            ]
        }
    ]
}
